name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build-matrix:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-13
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package artifacts
        shell: bash
        run: |
          set -euo pipefail
          APP=tattletale
          TARGET=${{ matrix.target }}
          OUT=dist
          mkdir -p "$OUT"
          case "$TARGET" in
            *windows*)
              BIN=target/$TARGET/release/${APP}.exe
              ARCHIVE=${APP}-${TARGET}.zip
              7z a "$OUT/$ARCHIVE" "$BIN"
              ;;
            *)
              BIN=target/$TARGET/release/${APP}
              ARCHIVE=${APP}-${TARGET}.tar.gz
              tar -czf "$OUT/$ARCHIVE" -C "$(dirname "$BIN")" "$(basename "$BIN")"
              ;;
          esac

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: dist/*

  publish:
    needs: build-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Collect artifacts
        run: |
          mkdir upload
          find dist -type f -exec cp {} upload/ \;
          ls -lh upload

      - name: Generate checksums
        shell: bash
        run: |
          cd upload
          # Generate SHA256SUMS.txt with hashes of all artifacts
          shasum -a 256 * > SHA256SUMS.txt
          cat SHA256SUMS.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: upload/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
